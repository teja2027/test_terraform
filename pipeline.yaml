trigger:
  branches:
    include:
      - feature
      - main

pr:
  branches:
    include:
      - main

pool:
  name: 'my-agent-pool' 

stages:
  - stage: Terraform_validate
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'))
    jobs:
      - job: Validate
        continueOnError: False
        steps:
          - task: TerraformTaskV4@4
            displayName: 'Init Terraform'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendServiceArm: 'azure_connect'
              backendAzureRmResourceGroupName: 'myRg'
              backendAzureRmStorageAccountName: 'tfstate011962384904'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: 'Validate Terraform'
            inputs:
              provider: 'azurerm'
              command: 'validate'
          - task: TerraformTaskV4@4
            displayName: 'Plan Terraform'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              commandOptions: '-lock=false -out=$(System.DefaultWorkingDirectory)/terraform.tfplan'
              environmentServiceNameAzureRM: 'azure_connect'

  - stage: Apply_plan
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
      - job: Apply
        displayName: 'Apply Terraform' 
        steps:
          - task: TerraformTaskV4@4
            displayName: 'Init Terraform'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendServiceArm: 'azure_connect'
              backendAzureRmResourceGroupName: 'myRg'
              backendAzureRmStorageAccountName: 'tfstate011962384904'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: 'Validate Terraform'
            inputs:
              provider: 'azurerm'
              command: 'validate'          
          - task: TerraformTaskV4@4
            displayName: 'Apply Terraform'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              environmentServiceNameAzureRM: 'azure_connect'


    
